using Duplicati.Library.Localization.Short;
namespace Duplicati.Library.Backend.AzureBlob.Strings {
    internal static class AzureBlobBackend {
        public static string ContainerNameDescriptionLong { get { return LC.L(@"All files will be written to the container specified"); } }
        public static string ContainerNameDescriptionShort { get { return LC.L(@"The name of the storage container "); } }
        public static string DisplayName { get { return LC.L(@"Azure blob"); } }
        public static string NoStorageAccountName { get { return LC.L(@"No Azure storage account name given"); } }
        public static string StorageAccountNameDescriptionLong { get { return LC.L(@"The Azure storage account name which can be obtained by clicking the ""Manage Access Keys"" button on the storage account dashboard"); } }
        public static string StorageAccountNameDescriptionShort { get { return LC.L(@"The storage account name"); } }
        public static string AccessKeyDescriptionLong { get { return LC.L(@"The Azure access key which can be obtained by clicking the ""Manage Access Keys"" button on the storage account dashboard"); } }
        public static string AccessKeyDescriptionShort { get { return LC.L(@"The access key"); } }
        public static string NoAccessKey { get { return LC.L(@"No Azure access key given"); } }
        public static string AuthPasswordDescriptionLong { get { return LC.L(@"The password used to connect to the server. This may also be supplied as the environment variable ""AUTH_PASSWORD""."); } }
        public static string AuthPasswordDescriptionShort { get { return LC.L(@"Supplies the password used to connect to the server"); } }
        public static string AuthUsernameDescriptionLong { get { return LC.L(@"The username used to connect to the server. This may also be supplied as the environment variable ""AUTH_USERNAME""."); } }
        public static string AuthUsernameDescriptionShort { get { return LC.L(@"Supplies the username used to connect to the server"); } }
        public static string Description_v2 { get { return LC.L(@"This backend can read and write data to Azure blob storage. Specify the connection using ""azure://container"" along with Account Name and Access Keys or using SAS Token generated by Azure Storage APIs but replace https:// with azure:// - such as: ""azure://[account hostname such as: myaccount.blob.core.windows.net]/container-name/path-prefix?st=...&se=..."" "); } }

        public static string InternalParametersShort { get { return LC.L(@"SAS Token"); } }
        public static string InternalParameters { get { return LC.L(@"This part of SAS Token and should not be used directly."); } }
    }
}
